
import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author arita
 */
public class FramePrincipal extends javax.swing.JFrame {

    String ArchivoLibros = "libros.txt";
    String ArchivoMiembros = "Miembros.dat";
    File file = new File(ArchivoMiembros);
    ArrayList<Libros> ArrayLibros;
    ArrayList<Personas> ArrayPersonas;
    ArrayList<LibrosBinarios> ArrayTempLibrosBinarios;

    public FramePrincipal() {
        ArrayLibros = new ArrayList<>();
        ArrayPersonas = new ArrayList<>();
        initComponents();
        LeerPersonasBinarias();
        LeerLibros();
        for (Libros ArrayLibro : ArrayLibros) {
            System.out.println(ArrayLibro);
        }
        for (Personas ArrayPersona : ArrayPersonas) {
            System.out.println(ArrayPersona);
        }
    }

    void AnadirMiembors() {
        ArrayTempLibrosBinarios = new ArrayList<>();
        LibrosBinarios nuevoLibro = new LibrosBinarios("HOTD", "George Martin", "12345");
        ArrayTempLibrosBinarios.add(nuevoLibro);
        Personas nuevaPersona = new Personas("Messi GOAT", "4567", ArrayTempLibrosBinarios);
        ArrayPersonas.add(nuevaPersona);

        ArrayTempLibrosBinarios = new ArrayList<>();
        LibrosBinarios nuevoLibro2 = new LibrosBinarios("GOT", "George Martin", "54321");
        ArrayTempLibrosBinarios.add(nuevoLibro2);
        Personas nuevaPersona2 = new Personas("CR7", "1234", ArrayTempLibrosBinarios);
        ArrayPersonas.add(nuevaPersona2);
        EscribirPersonas();
    }

    void LeerPersonasBinarias() {
        if (!file.exists()) {
            try {
                file.createNewFile();
                ArrayPersonas = new ArrayList<>();
                System.out.println("Archivo binario creado: " + file.getName());
            } catch (IOException e) {
                System.out.println("Error al crear el archivo binario: " + e.getMessage());
                return;
            }
        }
        try (ObjectInputStream reader = new ObjectInputStream(new FileInputStream(file))) {
            while (true) {
                try {
                    Personas persona = (Personas) reader.readObject();
                    ArrayPersonas.add(persona);
                    System.out.println("Persona le√≠da: " + persona);
                } catch (EOFException e) {
                    break; // Fin del archivo
                } catch (ClassNotFoundException e) {
                    System.out.println("Clase no encontrada: " + e.getMessage());
                }
            }
        } catch (FileNotFoundException e) {
            System.out.println("Archivo no encontrado: " + file.getName());
        } catch (IOException ex) {
            System.out.println("Hubo un error al leer el archivo: " + ex.getMessage());
        }
    }

    public void EscribirPersonas() {
        try (ObjectOutputStream writer = new ObjectOutputStream(new FileOutputStream(ArchivoMiembros))) {
            for (Personas ArrayPersona : ArrayPersonas) {
                writer.writeObject(ArrayPersona);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InternalFrameGestionarLibros = new javax.swing.JInternalFrame();
        BotonCargarLibros = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TextFieldBuscarporTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        BotonBuscarLibro = new javax.swing.JButton();
        TextFieldTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TextFieldAutor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TextFieldISBN = new javax.swing.JTextField();
        BotonAgregarLibro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaCargarLibro = new javax.swing.JTextArea();
        BotonGuardarLibros = new javax.swing.JButton();
        InternalFramePedirLibro = new javax.swing.JInternalFrame();
        jLabel6 = new javax.swing.JLabel();
        TextFieldIDmiembro = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TextFieldTitulodelLibro = new javax.swing.JTextField();
        BotonPediLibro = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextAreaPedirLibro = new javax.swing.JTextArea();
        InternalFrameGestionarMiembros = new javax.swing.JInternalFrame();
        BotonCargarMiembros = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        TextFieldNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TextFieldID = new javax.swing.JTextField();
        BotonAgregarMiembros = new javax.swing.JButton();
        BotonGuardarMiembros = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaCargarMiembros = new javax.swing.JTextArea();
        DesktopPaneMain = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        OpcionesMenu = new javax.swing.JMenu();
        GestionarLibrosOpciones = new javax.swing.JMenu();
        GestionarMiembrosOpciones = new javax.swing.JMenu();
        PedirLibroOpciones = new javax.swing.JMenu();
        SalirOpciones = new javax.swing.JMenu();

        InternalFrameGestionarLibros.setClosable(true);
        InternalFrameGestionarLibros.setTitle("Gestionar Libro");
        InternalFrameGestionarLibros.setMinimumSize(new java.awt.Dimension(872, 340));
        InternalFrameGestionarLibros.setVisible(true);

        BotonCargarLibros.setText("Cargar Libros");
        BotonCargarLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargarLibrosActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por Titulo:");

        TextFieldBuscarporTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldBuscarporTituloActionPerformed(evt);
            }
        });

        jLabel2.setText("Titulo:");

        BotonBuscarLibro.setText("Buscar Libro");
        BotonBuscarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarLibroActionPerformed(evt);
            }
        });

        TextFieldTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldTituloActionPerformed(evt);
            }
        });

        jLabel3.setText("Autor:");

        TextFieldAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldAutorActionPerformed(evt);
            }
        });

        jLabel4.setText("ISBN:");

        TextFieldISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldISBNActionPerformed(evt);
            }
        });

        BotonAgregarLibro.setText("Agregar Libro");
        BotonAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarLibroActionPerformed(evt);
            }
        });

        TextAreaCargarLibro.setEditable(false);
        TextAreaCargarLibro.setColumns(20);
        TextAreaCargarLibro.setRows(5);
        jScrollPane1.setViewportView(TextAreaCargarLibro);

        BotonGuardarLibros.setText("Guardar Libros");
        BotonGuardarLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarLibrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InternalFrameGestionarLibrosLayout = new javax.swing.GroupLayout(InternalFrameGestionarLibros.getContentPane());
        InternalFrameGestionarLibros.getContentPane().setLayout(InternalFrameGestionarLibrosLayout);
        InternalFrameGestionarLibrosLayout.setHorizontalGroup(
            InternalFrameGestionarLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFrameGestionarLibrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InternalFrameGestionarLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InternalFrameGestionarLibrosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InternalFrameGestionarLibrosLayout.createSequentialGroup()
                        .addComponent(BotonCargarLibros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldBuscarporTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotonBuscarLibro)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(BotonAgregarLibro)
                .addGap(10, 10, 10))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InternalFrameGestionarLibrosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonGuardarLibros)
                .addContainerGap())
        );
        InternalFrameGestionarLibrosLayout.setVerticalGroup(
            InternalFrameGestionarLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFrameGestionarLibrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InternalFrameGestionarLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonCargarLibros)
                    .addComponent(jLabel1)
                    .addComponent(TextFieldBuscarporTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonBuscarLibro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(InternalFrameGestionarLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TextFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(TextFieldAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(TextFieldISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonAgregarLibro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonGuardarLibros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        InternalFramePedirLibro.setClosable(true);
        InternalFramePedirLibro.setTitle("Gestionar Miembros");
        InternalFramePedirLibro.setMinimumSize(new java.awt.Dimension(713, 360));
        InternalFramePedirLibro.setVisible(true);

        jLabel6.setText("ID Miembro:");

        jLabel7.setText("Titulo del libro:");

        BotonPediLibro.setText("Pedir Libro");
        BotonPediLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPediLibroActionPerformed(evt);
            }
        });

        TextAreaPedirLibro.setEditable(false);
        TextAreaPedirLibro.setColumns(20);
        TextAreaPedirLibro.setRows(5);
        jScrollPane3.setViewportView(TextAreaPedirLibro);

        javax.swing.GroupLayout InternalFramePedirLibroLayout = new javax.swing.GroupLayout(InternalFramePedirLibro.getContentPane());
        InternalFramePedirLibro.getContentPane().setLayout(InternalFramePedirLibroLayout);
        InternalFramePedirLibroLayout.setHorizontalGroup(
            InternalFramePedirLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFramePedirLibroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldIDmiembro, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldTitulodelLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotonPediLibro)
                .addContainerGap(16, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );
        InternalFramePedirLibroLayout.setVerticalGroup(
            InternalFramePedirLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFramePedirLibroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InternalFramePedirLibroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldIDmiembro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(TextFieldTitulodelLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonPediLibro))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE))
        );

        InternalFrameGestionarMiembros.setClosable(true);
        InternalFrameGestionarMiembros.setTitle("Gestionar Miembros");
        InternalFrameGestionarMiembros.setMinimumSize(new java.awt.Dimension(793, 356));
        InternalFrameGestionarMiembros.setRequestFocusEnabled(false);
        InternalFrameGestionarMiembros.setVisible(true);

        BotonCargarMiembros.setText("Cargar Miembros");
        BotonCargarMiembros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargarMiembrosActionPerformed(evt);
            }
        });

        jLabel8.setText("Nombre:");

        TextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldNombreActionPerformed(evt);
            }
        });

        jLabel9.setText("ID:");

        TextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldIDActionPerformed(evt);
            }
        });

        BotonAgregarMiembros.setText("Agregar  Miembro");
        BotonAgregarMiembros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAgregarMiembrosActionPerformed(evt);
            }
        });

        BotonGuardarMiembros.setText("Guardar Miembros");
        BotonGuardarMiembros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarMiembrosActionPerformed(evt);
            }
        });

        TextAreaCargarMiembros.setEditable(false);
        TextAreaCargarMiembros.setColumns(20);
        TextAreaCargarMiembros.setRows(5);
        jScrollPane2.setViewportView(TextAreaCargarMiembros);

        javax.swing.GroupLayout InternalFrameGestionarMiembrosLayout = new javax.swing.GroupLayout(InternalFrameGestionarMiembros.getContentPane());
        InternalFrameGestionarMiembros.getContentPane().setLayout(InternalFrameGestionarMiembrosLayout);
        InternalFrameGestionarMiembrosLayout.setHorizontalGroup(
            InternalFrameGestionarMiembrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFrameGestionarMiembrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BotonCargarMiembros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonAgregarMiembros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BotonGuardarMiembros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        InternalFrameGestionarMiembrosLayout.setVerticalGroup(
            InternalFrameGestionarMiembrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InternalFrameGestionarMiembrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InternalFrameGestionarMiembrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonCargarMiembros)
                    .addComponent(jLabel8)
                    .addComponent(TextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(TextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonAgregarMiembros)
                    .addComponent(BotonGuardarMiembros))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DesktopPaneMain.setMinimumSize(new java.awt.Dimension(950, 544));

        javax.swing.GroupLayout DesktopPaneMainLayout = new javax.swing.GroupLayout(DesktopPaneMain);
        DesktopPaneMain.setLayout(DesktopPaneMainLayout);
        DesktopPaneMainLayout.setHorizontalGroup(
            DesktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 950, Short.MAX_VALUE)
        );
        DesktopPaneMainLayout.setVerticalGroup(
            DesktopPaneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
        );

        OpcionesMenu.setText("Opciones");

        GestionarLibrosOpciones.setText("Gestionar Libros");
        GestionarLibrosOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionarLibrosOpcionesMouseClicked(evt);
            }
        });
        OpcionesMenu.add(GestionarLibrosOpciones);

        GestionarMiembrosOpciones.setText("Gestionar Miembros");
        GestionarMiembrosOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GestionarMiembrosOpcionesMouseClicked(evt);
            }
        });
        OpcionesMenu.add(GestionarMiembrosOpciones);

        PedirLibroOpciones.setText("Pedir Libro");
        PedirLibroOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PedirLibroOpcionesMouseClicked(evt);
            }
        });
        OpcionesMenu.add(PedirLibroOpciones);

        SalirOpciones.setText("Salir");
        SalirOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SalirOpcionesMouseClicked(evt);
            }
        });
        OpcionesMenu.add(SalirOpciones);

        jMenuBar1.add(OpcionesMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DesktopPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TextFieldBuscarporTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldBuscarporTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldBuscarporTituloActionPerformed

    private void TextFieldTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldTituloActionPerformed

    private void TextFieldAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldAutorActionPerformed

    private void TextFieldISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldISBNActionPerformed

    private void GestionarLibrosOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionarLibrosOpcionesMouseClicked
        DesktopPaneMain.add(InternalFrameGestionarLibros);
        InternalFrameGestionarLibros.setSize(872, 340);
        InternalFrameGestionarLibros.setVisible(true);
    }//GEN-LAST:event_GestionarLibrosOpcionesMouseClicked

    private void BotonCargarLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargarLibrosActionPerformed
        TextAreaCargarLibro.setText("Cargando...\n");
        CargandoHilo hiloPrincipal = new CargandoHilo(TextAreaCargarLibro);
        Thread hilo = new Thread(hiloPrincipal);
        hilo.run();
        try {
            hilo.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        String acum = "";
        for (Libros ArrayLibro : ArrayLibros) {
            acum += ArrayLibro;
            acum += "\n";
        }
        TextAreaCargarLibro.setText(TextAreaCargarLibro.getText() + acum);

    }//GEN-LAST:event_BotonCargarLibrosActionPerformed

    void BuscarLibroPorTitulo() {
        for (Libros ArrayLibro : ArrayLibros) {
            if (TextFieldBuscarporTitulo.getText().equalsIgnoreCase(ArrayLibro.getTitulo())) {
                TextAreaCargarLibro.setText(ArrayLibro.toString());
            }
        }

    }

    void LeerLibros() {
        try (BufferedReader reader = new BufferedReader(new FileReader(ArchivoLibros))) {
            String linea;
            while ((linea = reader.readLine()) != null) {
                String[] partes = linea.split(",");
                Libros LibroLeido = new Libros(partes[0], partes[1], partes[2]);
                ArrayLibros.add(LibroLeido);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    void escribirLibro() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(ArchivoLibros, true))) {
            for (Libros ArrayLibro : ArrayLibros) {
                writer.write(ArrayLibro.toString());
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    private void SalirOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SalirOpcionesMouseClicked
        JOptionPane.showMessageDialog(null, "Ha salido del programa, \nMuchas gracias, fue un gustor recibir el lab\n"
                + "(espero pasar)");
        this.dispose();
    }//GEN-LAST:event_SalirOpcionesMouseClicked

    private void GestionarMiembrosOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GestionarMiembrosOpcionesMouseClicked
        DesktopPaneMain.add(InternalFrameGestionarMiembros);
        InternalFrameGestionarMiembros.setSize(826, 356);
        InternalFrameGestionarMiembros.setVisible(true);
    }//GEN-LAST:event_GestionarMiembrosOpcionesMouseClicked

    private void PedirLibroOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PedirLibroOpcionesMouseClicked
        DesktopPaneMain.add(InternalFramePedirLibro);
        InternalFramePedirLibro.setSize(713, 360);
        InternalFramePedirLibro.setVisible(true);
    }//GEN-LAST:event_PedirLibroOpcionesMouseClicked

    private void TextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldNombreActionPerformed

    private void TextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldIDActionPerformed

    private void BotonBuscarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarLibroActionPerformed
        boolean bandera = true;
        if (TextFieldBuscarporTitulo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene el campo");
        } else {
            for (Libros ArrayLibro : ArrayLibros) {
                if (TextFieldBuscarporTitulo.getText().equalsIgnoreCase(ArrayLibro.getTitulo())) {
                    TextAreaCargarLibro.setText(ArrayLibro.toString());
                } else {
                    bandera = false;
                }
            }

            if (!bandera) {
                JOptionPane.showMessageDialog(null, "libro no encontrado");
            }
        }
        TextFieldBuscarporTitulo.setText("");
    }//GEN-LAST:event_BotonBuscarLibroActionPerformed

    private void BotonAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarLibroActionPerformed
        if (TextFieldTitulo.getText().isEmpty() || TextFieldAutor.getText().isEmpty() || TextFieldISBN.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
        } else {
            Libros nuevoLibro = new Libros(TextFieldTitulo.getText(), TextFieldAutor.getText(), TextFieldISBN.getText());
            ArrayLibros.add(nuevoLibro);
            TextAreaCargarLibro.setText("se ha anadido el libro [" + nuevoLibro.getTitulo() + "]");
        }
    }//GEN-LAST:event_BotonAgregarLibroActionPerformed

    private void BotonPediLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPediLibroActionPerformed
        System.out.println("\n\n");
        boolean banderaNombre = false;
        boolean banderaTitulo = false;
        if (TextFieldIDmiembro.getText().isEmpty() || TextFieldTitulodelLibro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
        } else {
            String acumNombre = "";
            String acumTitulo = "";
            for (int i = 0; i < ArrayPersonas.size(); i++) {
                if (ArrayPersonas.get(i).getID().equals(TextFieldIDmiembro.getText())) {
                    acumNombre = ArrayPersonas.get(i).getID();
                    System.out.println(ArrayPersonas.get(i));
                    banderaNombre = true;

                    for (int j = 0; j < ArrayLibros.size(); j++) {
                        if (ArrayLibros.get(i).getTitulo().equalsIgnoreCase(TextFieldTitulodelLibro.getText())) {
                            System.out.println("loll");
                            acumTitulo = ArrayLibros.get(i).getTitulo();
                            System.out.println(ArrayLibros.get(i));
//                            ArrayTempLibrosBinarios = ArrayPersonas.get(i).getArrayLibros();
//                            ArrayTempLibrosBinarios.add(ArrayLibros.get(i));
//                            ArrayPersonas.get(i).setArrayLibros(ArrayTempLibrosBinarios);
                            ArrayLibros.remove(ArrayLibros.get(i));
                            escribirLibro();
                            banderaTitulo = true;
                        }
                    }
                }
            }
            if (!banderaNombre) {
                JOptionPane.showMessageDialog(null, "Id no encontrado");
            } else if (!banderaTitulo) {
                JOptionPane.showMessageDialog(null, "Libro no encontrado");
            } else {
                TextAreaPedirLibro.setText(acumTitulo + " prestado al miembro " + acumNombre);
            }
        }
//            for (Libros ArrayLibro : ArrayLibros) {
//                System.out.println(ArrayLibro);
//            }
        TextFieldIDmiembro.setText("");
        TextFieldTitulodelLibro.setText("");
//                for (Personas ArrayPersona : ArrayPersonas) {
//                    if (ArrayPersona.getID().equals(TextFieldIDmiembro.getText())) {
//                        acumNombre = ArrayPersona.getID();
//                        System.out.println(ArrayPersona);
//                        banderaNombre = true;
//                        for (Libros ArrayLibro : ArrayLibros) {
//                            if (ArrayLibro.getTitulo().equalsIgnoreCase(TextFieldTitulodelLibro.getText())) {
//                                acumTitulo = ArrayLibro.getTitulo();
//                                System.out.println(ArrayLibro);
//                                ArrayLibros.remove(ArrayLibro);
//                                //falta agregar el libro a la persona
//                                banderaTitulo = true;
//                            }
//                        }
//                    }
//                }
//                if (!banderaNombre) {
//                    JOptionPane.showMessageDialog(null, "Id no encontrado");
//                } else if (!banderaTitulo) {
//                    JOptionPane.showMessageDialog(null, "Libro no encontrado");
//                } else {
//                    TextAreaPedirLibro.setText(acumTitulo + " prestado al miembro " + acumNombre);
//                }
//            }
//            for (Libros ArrayLibro : ArrayLibros) {
//                System.out.println(ArrayLibro);
//            }
//            TextFieldIDmiembro.setText("");
//            TextFieldTitulodelLibro.setText("");
    }//GEN-LAST:event_BotonPediLibroActionPerformed

    private void BotonCargarMiembrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargarMiembrosActionPerformed
        TextAreaCargarMiembros.setText("cargando...\n");
        CargandoHilo hiloPrincipal = new CargandoHilo(TextAreaCargarLibro);
        Thread hilo = new Thread(hiloPrincipal);
        hilo.run();
        try {
            hilo.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        String acum = "";
        for (Personas ArrayPersona : ArrayPersonas) {
            acum += ArrayPersona;
            acum += "\n";
        }
        TextAreaCargarMiembros.setText(TextAreaCargarMiembros.getText() + acum);
    }//GEN-LAST:event_BotonCargarMiembrosActionPerformed

    private void BotonAgregarMiembrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAgregarMiembrosActionPerformed
        if (TextFieldNombre.getText().isEmpty() || TextFieldID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "llene todos los campos");
        } else {
            Personas nuevaPersona = new Personas(TextFieldNombre.getText(), TextFieldID.getText(), null);
            ArrayPersonas.add(nuevaPersona);
            TextAreaCargarMiembros.setText("se ha anadido el miembro[" + nuevaPersona.getNombre() + "]");
        }
        TextFieldNombre.setText("");
        TextFieldID.setText("");
    }//GEN-LAST:event_BotonAgregarMiembrosActionPerformed

    private void BotonGuardarMiembrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarMiembrosActionPerformed
        EscribirPersonas();
    }//GEN-LAST:event_BotonGuardarMiembrosActionPerformed

    private void BotonGuardarLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarLibrosActionPerformed
        escribirLibro();
    }//GEN-LAST:event_BotonGuardarLibrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAgregarLibro;
    private javax.swing.JButton BotonAgregarMiembros;
    private javax.swing.JButton BotonBuscarLibro;
    private javax.swing.JButton BotonCargarLibros;
    private javax.swing.JButton BotonCargarMiembros;
    private javax.swing.JButton BotonGuardarLibros;
    private javax.swing.JButton BotonGuardarMiembros;
    private javax.swing.JButton BotonPediLibro;
    private javax.swing.JDesktopPane DesktopPaneMain;
    private javax.swing.JMenu GestionarLibrosOpciones;
    private javax.swing.JMenu GestionarMiembrosOpciones;
    private javax.swing.JInternalFrame InternalFrameGestionarLibros;
    private javax.swing.JInternalFrame InternalFrameGestionarMiembros;
    private javax.swing.JInternalFrame InternalFramePedirLibro;
    private javax.swing.JMenu OpcionesMenu;
    private javax.swing.JMenu PedirLibroOpciones;
    private javax.swing.JMenu SalirOpciones;
    private javax.swing.JTextArea TextAreaCargarLibro;
    private javax.swing.JTextArea TextAreaCargarMiembros;
    private javax.swing.JTextArea TextAreaPedirLibro;
    private javax.swing.JTextField TextFieldAutor;
    private javax.swing.JTextField TextFieldBuscarporTitulo;
    private javax.swing.JTextField TextFieldID;
    private javax.swing.JTextField TextFieldIDmiembro;
    private javax.swing.JTextField TextFieldISBN;
    private javax.swing.JTextField TextFieldNombre;
    private javax.swing.JTextField TextFieldTitulo;
    private javax.swing.JTextField TextFieldTitulodelLibro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
